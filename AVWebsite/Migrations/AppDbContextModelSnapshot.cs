// <auto-generated />
using System;
using AVWebsite.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AVWebsite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("AVWebsite.Models.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Subtitle")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("AVWebsite.Models.AdditionalService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FeatureImage")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AdditionalServices");
                });

            modelBuilder.Entity("AVWebsite.Models.BookingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BookingStatuses");
                });

            modelBuilder.Entity("AVWebsite.Models.Gallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.About_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AboutId")
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.HasIndex("HolidayHomeId");

                    b.ToTable("About_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.AdditionalService_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AdditionalServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalServiceId");

                    b.HasIndex("HolidayHomeId");

                    b.ToTable("AdditionalService_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Subtitle")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Facility_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("HolidayHomeId");

                    b.ToTable("Facility_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Faq_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.Property<int?>("TourFaqId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HolidayHomeId");

                    b.HasIndex("TourFaqId");

                    b.ToTable("Faq_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Features", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Subtitle")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Features_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FeaturesId")
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeaturesId");

                    b.HasIndex("HolidayHomeId");

                    b.ToTable("Features_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HHCategories");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHCategory_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HHCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HHCategoryId");

                    b.HasIndex("HolidayHomeId");

                    b.ToTable("HHCategory_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Exclusion")
                        .HasColumnType("text");

                    b.Property<int?>("GalleryId1")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Inclusion")
                        .HasColumnType("text");

                    b.Property<int>("MaximumPersion")
                        .HasColumnType("int");

                    b.Property<int>("MinimumPerson")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("UnitName")
                        .HasColumnType("text");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GalleryId1");

                    b.ToTable("HHPackages");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHPackage_Amenities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HHPackageId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomAmenitiesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HHPackageId");

                    b.HasIndex("RoomAmenitiesId");

                    b.ToTable("HHPackage_Amenities");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHPackage_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HHPackageId")
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HHPackageId");

                    b.HasIndex("HolidayHomeId");

                    b.ToTable("HHPackage_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HHTypes");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHType_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HHTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HHTypeId");

                    b.HasIndex("HolidayHomeId");

                    b.ToTable("HHType_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HolidayHome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("FeatureImage")
                        .HasColumnType("text");

                    b.Property<string>("FeaturePrice")
                        .HasColumnType("text");

                    b.Property<string>("FullDescription")
                        .HasColumnType("text");

                    b.Property<int?>("GalleryId1")
                        .HasColumnType("int");

                    b.Property<string>("Hightlights")
                        .HasColumnType("text");

                    b.Property<float>("Lat")
                        .HasColumnType("float");

                    b.Property<float>("Long")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("PrimaryLocationId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GalleryId1");

                    b.HasIndex("PrimaryLocationId1");

                    b.ToTable("HolidayHomes");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Location_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HolidayHomeId");

                    b.HasIndex("LocationId");

                    b.ToTable("Location_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Review_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HolidayHomeId");

                    b.HasIndex("ReviewId");

                    b.ToTable("Review_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bed")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Exclusion")
                        .HasColumnType("text");

                    b.Property<int?>("GalleryId1")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Inclusion")
                        .HasColumnType("text");

                    b.Property<int>("MaximumPersion")
                        .HasColumnType("int");

                    b.Property<int>("MinimumPerson")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("RoomSize")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GalleryId1");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.RoomAmenities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Room_HH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HolidayHomeId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HolidayHomeId");

                    b.HasIndex("RoomId");

                    b.ToTable("Room_HHs");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Room_RoomAmenities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("RoomAmenitiesId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomAmenitiesId");

                    b.HasIndex("RoomId");

                    b.ToTable("Room_RoomAmenities");
                });

            modelBuilder.Entity("AVWebsite.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FeatureImage")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("AVWebsite.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<float>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.About_Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AboutId")
                        .HasColumnType("int");

                    b.Property<int>("ToursId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.HasIndex("ToursId");

                    b.ToTable("About_Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.AdditionalService_Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdditionalServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ToursId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalServiceId");

                    b.HasIndex("ToursId");

                    b.ToTable("AdditionalService_Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.Location_Tours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("ToursId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ToursId");

                    b.ToTable("Location_Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.Review_Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.Property<int>("ToursId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.HasIndex("ToursId");

                    b.ToTable("Review_Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TourCategories");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourCategory_Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TourCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ToursId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourCategoryId");

                    b.HasIndex("ToursId");

                    b.ToTable("TourCategory_Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourFaq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Subtitle")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TourFaqs");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourFaq_Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TourFaqId")
                        .HasColumnType("int");

                    b.Property<int>("ToursId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourFaqId");

                    b.HasIndex("ToursId");

                    b.ToTable("TourFaq_Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Exclusion")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Inclusion")
                        .HasColumnType("text");

                    b.Property<int>("MaximumPersion")
                        .HasColumnType("int");

                    b.Property<int>("MinimumPerson")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("UnitName")
                        .HasColumnType("text");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TourPackages");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourPackage_Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TourPackageId")
                        .HasColumnType("int");

                    b.Property<int>("ToursId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourPackageId");

                    b.HasIndex("ToursId");

                    b.ToTable("TourPackage_Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TourTypes");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourType_Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TourTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ToursId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourTypeId");

                    b.HasIndex("ToursId");

                    b.ToTable("TourType_Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.Tours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("Duration")
                        .HasColumnType("text");

                    b.Property<string>("Exclusion")
                        .HasColumnType("text");

                    b.Property<string>("FeatureImage")
                        .HasColumnType("text");

                    b.Property<int>("FeaturePrice")
                        .HasColumnType("int");

                    b.Property<string>("FeaturePriceText")
                        .HasColumnType("text");

                    b.Property<string>("FullDescription")
                        .HasColumnType("text");

                    b.Property<int>("GalleryId")
                        .HasColumnType("int");

                    b.Property<string>("Highlightis")
                        .HasColumnType("text");

                    b.Property<string>("Inclusions")
                        .HasColumnType("text");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<float>("MapLat")
                        .HasColumnType("float");

                    b.Property<float>("MapLong")
                        .HasColumnType("float");

                    b.Property<int>("MaximumPerson")
                        .HasColumnType("int");

                    b.Property<int>("MinimumPersion")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GalleryId");

                    b.HasIndex("LocationId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.WhatToExpect_Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ToursId")
                        .HasColumnType("int");

                    b.Property<int>("WhatToExpectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToursId");

                    b.HasIndex("WhatToExpectId");

                    b.ToTable("WhatToExpect_Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.WhatToExpect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Subtitle")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WhatToExpects");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.About_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.About", "About")
                        .WithMany()
                        .HasForeignKey("AboutId");

                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.Navigation("About");

                    b.Navigation("HolidayHome");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.AdditionalService_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.AdditionalService", "AdditionalService")
                        .WithMany()
                        .HasForeignKey("AdditionalServiceId");

                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.Navigation("AdditionalService");

                    b.Navigation("HolidayHome");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Facility_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.Facility", "Facility")
                        .WithMany()
                        .HasForeignKey("FacilityId");

                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.Navigation("Facility");

                    b.Navigation("HolidayHome");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Faq_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.HasOne("AVWebsite.Models.Tour.TourFaq", "TourFaq")
                        .WithMany()
                        .HasForeignKey("TourFaqId");

                    b.Navigation("HolidayHome");

                    b.Navigation("TourFaq");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Features_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.Features", "Features")
                        .WithMany()
                        .HasForeignKey("FeaturesId");

                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.Navigation("Features");

                    b.Navigation("HolidayHome");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHCategory_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.HHCategory", "HHCategory")
                        .WithMany()
                        .HasForeignKey("HHCategoryId");

                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.Navigation("HHCategory");

                    b.Navigation("HolidayHome");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHPackage", b =>
                {
                    b.HasOne("AVWebsite.Models.Gallery", "Gallery")
                        .WithMany()
                        .HasForeignKey("GalleryId1");

                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHPackage_Amenities", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.HHPackage", "HHPackage")
                        .WithMany()
                        .HasForeignKey("HHPackageId");

                    b.HasOne("AVWebsite.Models.HH.RoomAmenities", "RoomAmenities")
                        .WithMany()
                        .HasForeignKey("RoomAmenitiesId");

                    b.Navigation("HHPackage");

                    b.Navigation("RoomAmenities");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHPackage_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.HHPackage", "HHPackage")
                        .WithMany()
                        .HasForeignKey("HHPackageId");

                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.Navigation("HHPackage");

                    b.Navigation("HolidayHome");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HHType_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.HHType", "HHType")
                        .WithMany()
                        .HasForeignKey("HHTypeId");

                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.Navigation("HHType");

                    b.Navigation("HolidayHome");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.HolidayHome", b =>
                {
                    b.HasOne("AVWebsite.Models.Gallery", "Gallery")
                        .WithMany()
                        .HasForeignKey("GalleryId1");

                    b.HasOne("AVWebsite.Models.Location", "PrimaryLocation")
                        .WithMany()
                        .HasForeignKey("PrimaryLocationId1");

                    b.Navigation("Gallery");

                    b.Navigation("PrimaryLocation");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Location_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.HasOne("AVWebsite.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("HolidayHome");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Review_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.HasOne("AVWebsite.Models.Review", "Review")
                        .WithMany()
                        .HasForeignKey("ReviewId");

                    b.Navigation("HolidayHome");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Room", b =>
                {
                    b.HasOne("AVWebsite.Models.Gallery", "Gallery")
                        .WithMany()
                        .HasForeignKey("GalleryId1");

                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Room_HH", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.HolidayHome", "HolidayHome")
                        .WithMany()
                        .HasForeignKey("HolidayHomeId");

                    b.HasOne("AVWebsite.Models.HH.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.Navigation("HolidayHome");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("AVWebsite.Models.HH.Room_RoomAmenities", b =>
                {
                    b.HasOne("AVWebsite.Models.HH.RoomAmenities", "RoomAmenities")
                        .WithMany()
                        .HasForeignKey("RoomAmenitiesId");

                    b.HasOne("AVWebsite.Models.HH.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.Navigation("Room");

                    b.Navigation("RoomAmenities");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.About_Tour", b =>
                {
                    b.HasOne("AVWebsite.Models.About", "About")
                        .WithMany()
                        .HasForeignKey("AboutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVWebsite.Models.Tour.Tours", "Tours")
                        .WithMany()
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("About");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.AdditionalService_Tour", b =>
                {
                    b.HasOne("AVWebsite.Models.AdditionalService", "AdditionalService")
                        .WithMany()
                        .HasForeignKey("AdditionalServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVWebsite.Models.Tour.Tours", "Tours")
                        .WithMany()
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdditionalService");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.Location_Tours", b =>
                {
                    b.HasOne("AVWebsite.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVWebsite.Models.Tour.Tours", "Tours")
                        .WithMany()
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.Review_Tour", b =>
                {
                    b.HasOne("AVWebsite.Models.Review", "Review")
                        .WithMany()
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVWebsite.Models.Tour.Tours", "Tours")
                        .WithMany()
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Review");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourCategory_Tour", b =>
                {
                    b.HasOne("AVWebsite.Models.Tour.TourCategory", "TourCategory")
                        .WithMany()
                        .HasForeignKey("TourCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVWebsite.Models.Tour.Tours", "Tours")
                        .WithMany()
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourCategory");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourFaq_Tour", b =>
                {
                    b.HasOne("AVWebsite.Models.Tour.TourFaq", "TourFaq")
                        .WithMany()
                        .HasForeignKey("TourFaqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVWebsite.Models.Tour.Tours", "Tours")
                        .WithMany()
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourFaq");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourPackage_Tour", b =>
                {
                    b.HasOne("AVWebsite.Models.Tour.TourPackage", "TourPackage")
                        .WithMany()
                        .HasForeignKey("TourPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVWebsite.Models.Tour.Tours", "Tours")
                        .WithMany()
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourPackage");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.TourType_Tour", b =>
                {
                    b.HasOne("AVWebsite.Models.Tour.TourType", "TourType")
                        .WithMany()
                        .HasForeignKey("TourTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVWebsite.Models.Tour.Tours", "Tours")
                        .WithMany()
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tours");

                    b.Navigation("TourType");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.Tours", b =>
                {
                    b.HasOne("AVWebsite.Models.Gallery", "Gallery")
                        .WithMany()
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVWebsite.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gallery");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("AVWebsite.Models.Tour.WhatToExpect_Tour", b =>
                {
                    b.HasOne("AVWebsite.Models.Tour.Tours", "Tours")
                        .WithMany()
                        .HasForeignKey("ToursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AVWebsite.Models.WhatToExpect", "WhatToExpect")
                        .WithMany()
                        .HasForeignKey("WhatToExpectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tours");

                    b.Navigation("WhatToExpect");
                });
#pragma warning restore 612, 618
        }
    }
}
